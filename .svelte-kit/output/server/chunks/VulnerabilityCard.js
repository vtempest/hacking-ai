import { c as create_ssr_component, v as validate_component, i as escape } from "./ssr.js";
import { C as Card, a as Card_header, b as Card_title, c as Card_content } from "./card-title.js";
import "clsx";
import { B as Badge } from "./Icon.js";
function getRiskColor(level) {
  switch (level) {
    case "Critical":
      return "destructive";
    case "High":
      return "outline";
    case "Medium":
      return "secondary";
    case "Low":
      return "secondary";
    default:
      return "secondary";
  }
}
function getBorderColor(level) {
  switch (level) {
    case "Critical":
      return "border-l-red-500";
    case "High":
      return "border-l-orange-500";
    case "Medium":
      return "border-l-yellow-500";
    case "Low":
      return "border-l-green-500";
    default:
      return "border-l-gray-500";
  }
}
const VulnerabilityCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { vulnerability } = $$props;
  if ($$props.vulnerability === void 0 && $$bindings.vulnerability && vulnerability !== void 0) $$bindings.vulnerability(vulnerability);
  return `${validate_component(Card, "Card").$$render(
    $$result,
    {
      class: "transition-all hover:shadow-md cursor-pointer border-l-4 " + getBorderColor(vulnerability.riskLevel)
    },
    {},
    {
      default: () => {
        return `${validate_component(Card_header, "CardHeader").$$render($$result, { class: "pb-3" }, {}, {
          default: () => {
            return `<div class="flex items-start justify-between"><div class="space-y-1"><div class="text-xs font-mono text-muted-foreground bg-muted px-2 py-1 rounded w-fit">${escape(vulnerability.id)}</div> ${validate_component(Card_title, "CardTitle").$$render($$result, { class: "text-lg" }, {}, {
              default: () => {
                return `${escape(vulnerability.title)}`;
              }
            })}</div> ${validate_component(Badge, "Badge").$$render(
              $$result,
              {
                variant: getRiskColor(vulnerability.riskLevel)
              },
              {},
              {
                default: () => {
                  return `${escape(vulnerability.riskLevel)}`;
                }
              }
            )}</div>`;
          }
        })} ${validate_component(Card_content, "CardContent").$$render($$result, {}, {}, {
          default: () => {
            return `<p class="text-sm text-muted-foreground mb-4">${escape(vulnerability.description)}</p> <div class="flex justify-between text-sm"><div class="text-center"><div class="text-xs text-muted-foreground uppercase tracking-wide" data-svelte-h="svelte-1vpmsxn">Prevalence</div> <div class="font-bold text-primary">${escape(vulnerability.prevalence)}%</div></div> <div class="text-center"><div class="text-xs text-muted-foreground uppercase tracking-wide" data-svelte-h="svelte-1udzvu7">Attack Success</div> <div class="font-bold text-primary">${escape(vulnerability.attackSuccess)}%</div></div> <div class="text-center"><div class="text-xs text-muted-foreground uppercase tracking-wide" data-svelte-h="svelte-duqxkm">Category</div> <div class="font-bold text-primary text-xs">${escape(vulnerability.category)}</div></div></div>`;
          }
        })}`;
      }
    }
  )}`;
});
export {
  VulnerabilityCard as V
};
